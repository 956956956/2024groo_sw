module MyComparatorGate(A_lt_B, A_gt_B, A_eq_B, A, B);

input [3:0] A, B;
output A_lt_B, A_gt_B, A_eq_B;

wire x0, x1, x2, x3;
wire p0, p1, p2, p3;
wire q0, q1, q2, q3;
wire y0, y1, y2, y3, y4, y5;

and n1(p0, ~A[0], B[0]);
and n2(q0, A[0], ~B[0]);
nor n3(x0, p0, q0);

and n4(p1, ~A[1], B[1]);
and n5(q1, A[1], ~B[1]);
nor n6(x1, p1, q1);

and n7(p2, ~A[2], B[2]);
and n8(q2, A[2], ~B[2]);
nor n9(x2, p2, q2);

and n10(p3, ~A[3], B[3]);
and n11(q3, A[3], ~B[3]);
nor n12(x3, p3, q3);

and n13(A_eq_B, x0, x1, x2, x3);

and n14(y0, q0, x1, x2, x3);
and n15(y1, p0, x1, x2, x3);
and n16(y2, q1, x2, x3);
and n17(y3, p1, x2, x3);
and n18(y4, q2, x3);
and n19(y5, p2, x3);

or(A_gt_B, y0, y2, y4, q3);
or(A_lt_B, y1, y3, y5, p3);

endmodule

module Top;

wire lt, gt, eq;
reg [3:0] A, B;
    
MyComparatorGate m1(.A_lt_B(lt), .A_gt_B(gt), .A_eq_B(eq), .A(A), .B(B));
 
initial
begin
    $monitor($time, " A = %h, B = %h, A_lt_B = %b, A_gt_B = %b, A_eq_B = %b", A, B, lt, gt, eq);
    A = 4'h0; B = 4'h1;
    #10 A = 4'hf; B = 4'h3;
    #10 A = 4'ha; B = 4'hb;
    #10 A = 4'h0; B = 4'h0;
    #10 A = 4'h7; B = 4'hd;
    #10 A = 4'h9; B = 4'h9;
end

endmodule