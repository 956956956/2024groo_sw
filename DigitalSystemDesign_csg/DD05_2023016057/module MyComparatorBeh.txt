module MyComparatorBeh(A_lt_B, A_gt_B, A_eq_B, A, B, CLK, nRST);

input [3:0] A, B;
input CLK, nRST;
output reg A_lt_B, A_gt_B, A_eq_B;

always @(posedge CLK or negedge nRST)
begin
    if(!nRST)
    begin
        A_lt_B = 1'h0;
        A_gt_B = 1'h0;
        A_eq_B = 1'h0;
    end
    else
    begin
        if(A < B)
        begin
            A_lt_B = 1'h1;
            A_gt_B = 0;
            A_eq_B = 0;
        end
        else if(A > B)
        begin
            A_lt_B = 0;
            A_gt_B = 1'h1;
            A_eq_B = 0;
        end
        else
        begin
            A_lt_B = 0;
            A_gt_B = 0;
            A_eq_B = 1'h1;
        end
    end
end

endmodule

module Top;

wire lt, gt, eq;
reg [3:0] A, B;
reg CLK, nRST;
    
MyComparatorBeh m1(.A_lt_B(lt), .A_gt_B(gt), .A_eq_B(eq), .A(A), .B(B), .CLK(CLK), .nRST(nRST));

initial
begin
    CLK = 0;
    forever #5 CLK = ~CLK;
end

initial
begin
    $monitor($time, " A = %h, B = %h, A_lt_B = %b, A_gt_B = %b, A_eq_B = %b", A, B, lt, gt, eq);
    A = 4'h0; B = 4'h1; nRST = 0;
    #10 nRST = ~nRST; A = 4'hf; B = 4'h3;
    #10 A = 4'ha; B = 4'hb;
    #10 A = 4'h0; B = 4'h0;
    #10 A = 4'h7; B = 4'hd;
    #10 A = 4'h9; B = 4'h9;
    #10 $finish;
end

endmodule